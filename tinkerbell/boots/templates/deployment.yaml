{{- if .Values.deploy }}
{{- $remoteDhcpIp := default .Values.remoteIp .Values.remoteDhcpIp }}
{{- $remoteSyslogIp := default .Values.remoteIp .Values.remoteSyslogIp }}
{{- $osieBaseIp := default .Values.remoteIp .Values.osieBase.ip }}
{{- $tinkServerIp := default .Values.remoteIp .Values.tinkServer.ip }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.name }}
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace | quote }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
      stack: tinkerbell
      {{- with .Values.selector }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
  strategy:
    type: {{ .Values.deployment.strategy.type }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        stack: tinkerbell
        {{- with .Values.selector }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
            - -dhcp-addr={{ printf "%v:%v" .Values.dhcp.ip .Values.dhcp.port }}
            - -ipxe-tftp-addr={{ printf "%v:%v" .Values.tftp.ip .Values.tftp.port }}
            - -http-addr={{ printf "%v:%v" .Values.http.ip .Values.http.port }}
            - -syslog-addr={{ printf "%v:%v" .Values.syslog.ip .Values.syslog.port }}
            - -osie-url={{ printf "%v://%v:%v" .Values.osieBase.protocol $osieBaseIp .Values.osieBase.port }}
          {{- range .Values.additionalArgs }}
            - {{ . }}
          {{- end }}
          env:
            - name: TRUSTED_PROXIES
              value: {{ required "missing trustedProxies" ( join "," .Values.trustedProxies | quote ) }}
            - name: DATA_MODEL_VERSION
              value: "kubernetes"
            - name: PUBLIC_IP
              value: {{ $remoteDhcpIp | quote }}
            - name: PUBLIC_SYSLOG_FQDN
              value: {{ $remoteSyslogIp | quote }}
            - name: TINKERBELL_GRPC_AUTHORITY
              value: {{ printf "%s:%v" $tinkServerIp .Values.tinkServer.port | quote }}
            - name: TINKERBELL_TLS
              value: {{ .Values.tinkServer.tls | quote }}
            - name: BOOTS_EXTRA_KERNEL_ARGS
              value: {{ join " " ( append .Values.additionlKernelArgs ( printf "tink_worker_image=%s" ( required "missing tinkWorkerImage" .Values.tinkWorkerImage ) ) ) | quote }}
            - name: BOOTS_LOG_LEVEL
              value: {{ .Values.logLevel | quote }}
            {{- range .Values.additionalEnv }}
            - name: {{ .name | quote }}
              value: {{ .value | quote }}
            {{- end }}
          {{- if not .Values.hostNetwork }}
          ports:
            {{- include "boots.ports" ( merge ( dict "PortKey" "containerPort" ) .Values  ) | indent 12 }}
          {{- end }}
          name: {{ .Values.name }}
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
      serviceAccountName: {{ .Values.name }}
      {{- if .Values.hostNetwork }}
      hostNetwork: true
      {{- end }}
{{- end }}
