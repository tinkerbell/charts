stack:
  enabled: true
  name: tink-stack
  service:
    enabled: true
    type: LoadBalancer
  selector:
    app: tink-stack
  loadBalancerIP: 192.168.2.112
  lbClass: kube-vip.io/kube-vip-class
  image: nginx:1.23.1
  # clusterDNS represents the ip address of the cluster dns server ip. NodeLocalDNSCache ip for example is 169.254.20.10.
  clusterDNS: 169.254.20.10
  hook:
    enabled: true
    name: hook-files
    port: 8080
    image: ubuntu
    downloads:
      - url: https://github.com/tinkerbell/hook/releases/download/v0.8.0/hook_x86_64.tar.gz
        sha512sum:
          kernel: "45a83dc747ff05fda09dc7a3b376fca3d82079fbfe99927d9f1c935f2070b5ac6469a41387fefd9e2eeb51062959846900583274a5d02e4131f37162a6167b28  vmlinuz-x86_64"
          initramfs: "17ca45318762975464e7abd8f09316d96a658cbbf38c46a47b1ff6f712cffc23d035091883e7e94c21a3b54d8f67c4a982e1fac206449d79f86773ea8c6b7ec6  initramfs-x86_64"
      - url: https://github.com/tinkerbell/hook/releases/download/v0.8.0/hook_aarch64.tar.gz
        sha512sum:
          kernel: "80c14e9b2407aabe59b40d7d60e0b96cb2b8812a13d9c278ad1f042aea510d6ff0e4de3c42e39ed049fda871564744cd9f2559d72c3f010331dde62c18af2c77  vmlinuz-aarch64"
          initramfs: "5a4eaea8c77c0e574ae3264ddec25a35e758205a75931a61a7911d2b5ac7151e2711a3633b08c05ffc89ab26f81224ea60bb420dab65fd1ccd0b77990db0361a  initramfs-aarch64"
  kubevip:
    enabled: true
    name: kube-vip
    image: ghcr.io/kube-vip/kube-vip:v0.5.7
    imagePullPolicy: IfNotPresent
    roleName: kube-vip-role
    roleBindingName: kube-vip-rolebinding
    # Customize the interface KubeVIP advertises on. When unset, KubeVIP will autodetect the
    # interface.
    #interface: enp0s8
  relay: # relay allows us to listen and respond to layer broadcast DHCP requests
    name: dhcp-relay
    enabled: true
    # This image (ghcr.io/jacobweinstock/dhcrelay) is used because `dhcrelay` doesn't respect signals properly when run as PID 1.
    image: ghcr.io/jacobweinstock/dhcrelay
    maxHopCount: 10
    # sourceInterface is the Host/Node interface to use for listening for DHCP broadcast packets.
    sourceInterface: eno1 # TODO(jacobweinstock): investigate autodetecting a default

# -- Overrides
# The values defined here override those in the individual charts. Some of them require tweaking
# before deployment as they are environment dependent; others are surfaced for convenience.
#
# See individual chart documentation for additional detail.

boots:
  image: quay.io/tinkerbell/boots:v0.8.0
  tinkWorkerImage: quay.io/tinkerbell/tink-worker:v0.8.0
  trustedProxies: []
  # This will be the IP address that machines use to reach Boots (via unicast for DHCP) for netbooting. It should be a unused IP address in your network.
  remoteIp: 192.168.2.113
  # Once the Kubernetes Gateway API is more stable, we will use that and be able to require only a single IP for all Tinkerbell services.
  tinkServer:
    # This should be the same as `stack.loadBalancerIP`.
    ip: 192.168.2.112
  osieBase:
    # This should be the same as `stack.loadBalancerIP`.
    ip: 192.168.2.112

hegel:
  image: quay.io/tinkerbell/hegel:v0.10.1
  trustedProxies: []

rufio:
  image: quay.io/tinkerbell/rufio:v0.1.0

tink:
  controller:
    image: quay.io/tinkerbell/tink-controller:v0.8.0
  server:
    image: quay.io/tinkerbell/tink:v0.8.0
